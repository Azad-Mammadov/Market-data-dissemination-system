// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: marketdata.proto
// Protobuf C++ Version: 5.29.3

#ifndef marketdata_2eproto_2epb_2eh
#define marketdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_marketdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_marketdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_marketdata_2eproto;
class InstrumentIds;
struct InstrumentIdsDefaultTypeInternal;
extern InstrumentIdsDefaultTypeInternal _InstrumentIds_default_instance_;
class OrderbookLevel;
struct OrderbookLevelDefaultTypeInternal;
extern OrderbookLevelDefaultTypeInternal _OrderbookLevel_default_instance_;
class OrderbookLevelUpdate;
struct OrderbookLevelUpdateDefaultTypeInternal;
extern OrderbookLevelUpdateDefaultTypeInternal _OrderbookLevelUpdate_default_instance_;
class OrderbookSnapshotUpdate;
struct OrderbookSnapshotUpdateDefaultTypeInternal;
extern OrderbookSnapshotUpdateDefaultTypeInternal _OrderbookSnapshotUpdate_default_instance_;
class OrderbookUpdate;
struct OrderbookUpdateDefaultTypeInternal;
extern OrderbookUpdateDefaultTypeInternal _OrderbookUpdate_default_instance_;
class Subscription;
struct SubscriptionDefaultTypeInternal;
extern SubscriptionDefaultTypeInternal _Subscription_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum OrderbookLevelUpdateType : int {
  INVALID = 0,
  ADD = 1,
  REPLACE = 2,
  REMOVE = 3,
  OrderbookLevelUpdateType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OrderbookLevelUpdateType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OrderbookLevelUpdateType_IsValid(int value);
extern const uint32_t OrderbookLevelUpdateType_internal_data_[];
constexpr OrderbookLevelUpdateType OrderbookLevelUpdateType_MIN = static_cast<OrderbookLevelUpdateType>(0);
constexpr OrderbookLevelUpdateType OrderbookLevelUpdateType_MAX = static_cast<OrderbookLevelUpdateType>(3);
constexpr int OrderbookLevelUpdateType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OrderbookLevelUpdateType_descriptor();
template <typename T>
const std::string& OrderbookLevelUpdateType_Name(T value) {
  static_assert(std::is_same<T, OrderbookLevelUpdateType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OrderbookLevelUpdateType_Name().");
  return OrderbookLevelUpdateType_Name(static_cast<OrderbookLevelUpdateType>(value));
}
template <>
inline const std::string& OrderbookLevelUpdateType_Name(OrderbookLevelUpdateType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderbookLevelUpdateType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OrderbookLevelUpdateType_Parse(absl::string_view name, OrderbookLevelUpdateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderbookLevelUpdateType>(
      OrderbookLevelUpdateType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class OrderbookLevel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OrderbookLevel) */ {
 public:
  inline OrderbookLevel() : OrderbookLevel(nullptr) {}
  ~OrderbookLevel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderbookLevel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderbookLevel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderbookLevel(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderbookLevel(const OrderbookLevel& from) : OrderbookLevel(nullptr, from) {}
  inline OrderbookLevel(OrderbookLevel&& from) noexcept
      : OrderbookLevel(nullptr, std::move(from)) {}
  inline OrderbookLevel& operator=(const OrderbookLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderbookLevel& operator=(OrderbookLevel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderbookLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderbookLevel* internal_default_instance() {
    return reinterpret_cast<const OrderbookLevel*>(
        &_OrderbookLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OrderbookLevel& a, OrderbookLevel& b) { a.Swap(&b); }
  inline void Swap(OrderbookLevel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderbookLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderbookLevel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderbookLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderbookLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderbookLevel& from) { OrderbookLevel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderbookLevel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OrderbookLevel"; }

 protected:
  explicit OrderbookLevel(::google::protobuf::Arena* arena);
  OrderbookLevel(::google::protobuf::Arena* arena, const OrderbookLevel& from);
  OrderbookLevel(::google::protobuf::Arena* arena, OrderbookLevel&& from) noexcept
      : OrderbookLevel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPriceFieldNumber = 1,
    kIsBuyFieldNumber = 2,
    kQuantityFieldNumber = 3,
  };
  // int32 price = 1;
  void clear_price() ;
  ::int32_t price() const;
  void set_price(::int32_t value);

  private:
  ::int32_t _internal_price() const;
  void _internal_set_price(::int32_t value);

  public:
  // bool is_buy = 2;
  void clear_is_buy() ;
  bool is_buy() const;
  void set_is_buy(bool value);

  private:
  bool _internal_is_buy() const;
  void _internal_set_is_buy(bool value);

  public:
  // uint32 quantity = 3;
  void clear_quantity() ;
  ::uint32_t quantity() const;
  void set_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_quantity() const;
  void _internal_set_quantity(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:OrderbookLevel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderbookLevel& from_msg);
    ::int32_t price_;
    bool is_buy_;
    ::uint32_t quantity_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};
// -------------------------------------------------------------------

class InstrumentIds final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:InstrumentIds) */ {
 public:
  inline InstrumentIds() : InstrumentIds(nullptr) {}
  ~InstrumentIds() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InstrumentIds* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InstrumentIds));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstrumentIds(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstrumentIds(const InstrumentIds& from) : InstrumentIds(nullptr, from) {}
  inline InstrumentIds(InstrumentIds&& from) noexcept
      : InstrumentIds(nullptr, std::move(from)) {}
  inline InstrumentIds& operator=(const InstrumentIds& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstrumentIds& operator=(InstrumentIds&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstrumentIds& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstrumentIds* internal_default_instance() {
    return reinterpret_cast<const InstrumentIds*>(
        &_InstrumentIds_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(InstrumentIds& a, InstrumentIds& b) { a.Swap(&b); }
  inline void Swap(InstrumentIds* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstrumentIds* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstrumentIds* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InstrumentIds>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InstrumentIds& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InstrumentIds& from) { InstrumentIds::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InstrumentIds* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "InstrumentIds"; }

 protected:
  explicit InstrumentIds(::google::protobuf::Arena* arena);
  InstrumentIds(::google::protobuf::Arena* arena, const InstrumentIds& from);
  InstrumentIds(::google::protobuf::Arena* arena, InstrumentIds&& from) noexcept
      : InstrumentIds(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdsFieldNumber = 1,
  };
  // repeated int32 ids = 1;
  int ids_size() const;
  private:
  int _internal_ids_size() const;

  public:
  void clear_ids() ;
  ::int32_t ids(int index) const;
  void set_ids(int index, ::int32_t value);
  void add_ids(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_ids();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_ids() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_ids();

  public:
  // @@protoc_insertion_point(class_scope:InstrumentIds)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InstrumentIds& from_msg);
    ::google::protobuf::RepeatedField<::int32_t> ids_;
    ::google::protobuf::internal::CachedSize _ids_cached_byte_size_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};
// -------------------------------------------------------------------

class Subscription final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Subscription) */ {
 public:
  inline Subscription() : Subscription(nullptr) {}
  ~Subscription() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Subscription* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Subscription));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline Subscription(const Subscription& from) : Subscription(nullptr, from) {}
  inline Subscription(Subscription&& from) noexcept
      : Subscription(nullptr, std::move(from)) {}
  inline Subscription& operator=(const Subscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subscription& operator=(Subscription&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subscription& default_instance() {
    return *internal_default_instance();
  }
  enum ActionCase {
    kSubscribe = 1,
    kUnsubscribe = 2,
    ACTION_NOT_SET = 0,
  };
  static inline const Subscription* internal_default_instance() {
    return reinterpret_cast<const Subscription*>(
        &_Subscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Subscription& a, Subscription& b) { a.Swap(&b); }
  inline void Swap(Subscription* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subscription* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Subscription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Subscription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Subscription& from) { Subscription::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Subscription* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Subscription"; }

 protected:
  explicit Subscription(::google::protobuf::Arena* arena);
  Subscription(::google::protobuf::Arena* arena, const Subscription& from);
  Subscription(::google::protobuf::Arena* arena, Subscription&& from) noexcept
      : Subscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscribeFieldNumber = 1,
    kUnsubscribeFieldNumber = 2,
  };
  // .InstrumentIds subscribe = 1;
  bool has_subscribe() const;
  private:
  bool _internal_has_subscribe() const;

  public:
  void clear_subscribe() ;
  const ::InstrumentIds& subscribe() const;
  PROTOBUF_NODISCARD ::InstrumentIds* release_subscribe();
  ::InstrumentIds* mutable_subscribe();
  void set_allocated_subscribe(::InstrumentIds* value);
  void unsafe_arena_set_allocated_subscribe(::InstrumentIds* value);
  ::InstrumentIds* unsafe_arena_release_subscribe();

  private:
  const ::InstrumentIds& _internal_subscribe() const;
  ::InstrumentIds* _internal_mutable_subscribe();

  public:
  // .InstrumentIds unsubscribe = 2;
  bool has_unsubscribe() const;
  private:
  bool _internal_has_unsubscribe() const;

  public:
  void clear_unsubscribe() ;
  const ::InstrumentIds& unsubscribe() const;
  PROTOBUF_NODISCARD ::InstrumentIds* release_unsubscribe();
  ::InstrumentIds* mutable_unsubscribe();
  void set_allocated_unsubscribe(::InstrumentIds* value);
  void unsafe_arena_set_allocated_unsubscribe(::InstrumentIds* value);
  ::InstrumentIds* unsafe_arena_release_unsubscribe();

  private:
  const ::InstrumentIds& _internal_unsubscribe() const;
  ::InstrumentIds* _internal_mutable_unsubscribe();

  public:
  void clear_action();
  ActionCase action_case() const;
  // @@protoc_insertion_point(class_scope:Subscription)
 private:
  class _Internal;
  void set_has_subscribe();
  void set_has_unsubscribe();
  inline bool has_action() const;
  inline void clear_has_action();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Subscription& from_msg);
    union ActionUnion {
      constexpr ActionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::InstrumentIds* subscribe_;
      ::InstrumentIds* unsubscribe_;
    } action_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};
// -------------------------------------------------------------------

class OrderbookSnapshotUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OrderbookSnapshotUpdate) */ {
 public:
  inline OrderbookSnapshotUpdate() : OrderbookSnapshotUpdate(nullptr) {}
  ~OrderbookSnapshotUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderbookSnapshotUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderbookSnapshotUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderbookSnapshotUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderbookSnapshotUpdate(const OrderbookSnapshotUpdate& from) : OrderbookSnapshotUpdate(nullptr, from) {}
  inline OrderbookSnapshotUpdate(OrderbookSnapshotUpdate&& from) noexcept
      : OrderbookSnapshotUpdate(nullptr, std::move(from)) {}
  inline OrderbookSnapshotUpdate& operator=(const OrderbookSnapshotUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderbookSnapshotUpdate& operator=(OrderbookSnapshotUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderbookSnapshotUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderbookSnapshotUpdate* internal_default_instance() {
    return reinterpret_cast<const OrderbookSnapshotUpdate*>(
        &_OrderbookSnapshotUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(OrderbookSnapshotUpdate& a, OrderbookSnapshotUpdate& b) { a.Swap(&b); }
  inline void Swap(OrderbookSnapshotUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderbookSnapshotUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderbookSnapshotUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderbookSnapshotUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderbookSnapshotUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderbookSnapshotUpdate& from) { OrderbookSnapshotUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderbookSnapshotUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OrderbookSnapshotUpdate"; }

 protected:
  explicit OrderbookSnapshotUpdate(::google::protobuf::Arena* arena);
  OrderbookSnapshotUpdate(::google::protobuf::Arena* arena, const OrderbookSnapshotUpdate& from);
  OrderbookSnapshotUpdate(::google::protobuf::Arena* arena, OrderbookSnapshotUpdate&& from) noexcept
      : OrderbookSnapshotUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBidsFieldNumber = 1,
    kAsksFieldNumber = 2,
  };
  // repeated .OrderbookLevel bids = 1;
  int bids_size() const;
  private:
  int _internal_bids_size() const;

  public:
  void clear_bids() ;
  ::OrderbookLevel* mutable_bids(int index);
  ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* mutable_bids();

  private:
  const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& _internal_bids() const;
  ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* _internal_mutable_bids();
  public:
  const ::OrderbookLevel& bids(int index) const;
  ::OrderbookLevel* add_bids();
  const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& bids() const;
  // repeated .OrderbookLevel asks = 2;
  int asks_size() const;
  private:
  int _internal_asks_size() const;

  public:
  void clear_asks() ;
  ::OrderbookLevel* mutable_asks(int index);
  ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* mutable_asks();

  private:
  const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& _internal_asks() const;
  ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* _internal_mutable_asks();
  public:
  const ::OrderbookLevel& asks(int index) const;
  ::OrderbookLevel* add_asks();
  const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& asks() const;
  // @@protoc_insertion_point(class_scope:OrderbookSnapshotUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderbookSnapshotUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::OrderbookLevel > bids_;
    ::google::protobuf::RepeatedPtrField< ::OrderbookLevel > asks_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};
// -------------------------------------------------------------------

class OrderbookLevelUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OrderbookLevelUpdate) */ {
 public:
  inline OrderbookLevelUpdate() : OrderbookLevelUpdate(nullptr) {}
  ~OrderbookLevelUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderbookLevelUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderbookLevelUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderbookLevelUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderbookLevelUpdate(const OrderbookLevelUpdate& from) : OrderbookLevelUpdate(nullptr, from) {}
  inline OrderbookLevelUpdate(OrderbookLevelUpdate&& from) noexcept
      : OrderbookLevelUpdate(nullptr, std::move(from)) {}
  inline OrderbookLevelUpdate& operator=(const OrderbookLevelUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderbookLevelUpdate& operator=(OrderbookLevelUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderbookLevelUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderbookLevelUpdate* internal_default_instance() {
    return reinterpret_cast<const OrderbookLevelUpdate*>(
        &_OrderbookLevelUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OrderbookLevelUpdate& a, OrderbookLevelUpdate& b) { a.Swap(&b); }
  inline void Swap(OrderbookLevelUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderbookLevelUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderbookLevelUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderbookLevelUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderbookLevelUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderbookLevelUpdate& from) { OrderbookLevelUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderbookLevelUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OrderbookLevelUpdate"; }

 protected:
  explicit OrderbookLevelUpdate(::google::protobuf::Arena* arena);
  OrderbookLevelUpdate(::google::protobuf::Arena* arena, const OrderbookLevelUpdate& from);
  OrderbookLevelUpdate(::google::protobuf::Arena* arena, OrderbookLevelUpdate&& from) noexcept
      : OrderbookLevelUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelFieldNumber = 2,
    kUpdateTypeFieldNumber = 1,
  };
  // .OrderbookLevel level = 2;
  bool has_level() const;
  void clear_level() ;
  const ::OrderbookLevel& level() const;
  PROTOBUF_NODISCARD ::OrderbookLevel* release_level();
  ::OrderbookLevel* mutable_level();
  void set_allocated_level(::OrderbookLevel* value);
  void unsafe_arena_set_allocated_level(::OrderbookLevel* value);
  ::OrderbookLevel* unsafe_arena_release_level();

  private:
  const ::OrderbookLevel& _internal_level() const;
  ::OrderbookLevel* _internal_mutable_level();

  public:
  // .OrderbookLevelUpdateType update_type = 1;
  void clear_update_type() ;
  ::OrderbookLevelUpdateType update_type() const;
  void set_update_type(::OrderbookLevelUpdateType value);

  private:
  ::OrderbookLevelUpdateType _internal_update_type() const;
  void _internal_set_update_type(::OrderbookLevelUpdateType value);

  public:
  // @@protoc_insertion_point(class_scope:OrderbookLevelUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderbookLevelUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::OrderbookLevel* level_;
    int update_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};
// -------------------------------------------------------------------

class OrderbookUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:OrderbookUpdate) */ {
 public:
  inline OrderbookUpdate() : OrderbookUpdate(nullptr) {}
  ~OrderbookUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderbookUpdate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderbookUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderbookUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderbookUpdate(const OrderbookUpdate& from) : OrderbookUpdate(nullptr, from) {}
  inline OrderbookUpdate(OrderbookUpdate&& from) noexcept
      : OrderbookUpdate(nullptr, std::move(from)) {}
  inline OrderbookUpdate& operator=(const OrderbookUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderbookUpdate& operator=(OrderbookUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderbookUpdate& default_instance() {
    return *internal_default_instance();
  }
  enum UpdateCase {
    kSnapshot = 2,
    kIncremental = 3,
    UPDATE_NOT_SET = 0,
  };
  static inline const OrderbookUpdate* internal_default_instance() {
    return reinterpret_cast<const OrderbookUpdate*>(
        &_OrderbookUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(OrderbookUpdate& a, OrderbookUpdate& b) { a.Swap(&b); }
  inline void Swap(OrderbookUpdate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderbookUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderbookUpdate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderbookUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderbookUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderbookUpdate& from) { OrderbookUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderbookUpdate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "OrderbookUpdate"; }

 protected:
  explicit OrderbookUpdate(::google::protobuf::Arena* arena);
  OrderbookUpdate(::google::protobuf::Arena* arena, const OrderbookUpdate& from);
  OrderbookUpdate(::google::protobuf::Arena* arena, OrderbookUpdate&& from) noexcept
      : OrderbookUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInstrumentIdFieldNumber = 1,
    kSnapshotFieldNumber = 2,
    kIncrementalFieldNumber = 3,
  };
  // int32 instrument_id = 1;
  void clear_instrument_id() ;
  ::int32_t instrument_id() const;
  void set_instrument_id(::int32_t value);

  private:
  ::int32_t _internal_instrument_id() const;
  void _internal_set_instrument_id(::int32_t value);

  public:
  // .OrderbookSnapshotUpdate snapshot = 2;
  bool has_snapshot() const;
  private:
  bool _internal_has_snapshot() const;

  public:
  void clear_snapshot() ;
  const ::OrderbookSnapshotUpdate& snapshot() const;
  PROTOBUF_NODISCARD ::OrderbookSnapshotUpdate* release_snapshot();
  ::OrderbookSnapshotUpdate* mutable_snapshot();
  void set_allocated_snapshot(::OrderbookSnapshotUpdate* value);
  void unsafe_arena_set_allocated_snapshot(::OrderbookSnapshotUpdate* value);
  ::OrderbookSnapshotUpdate* unsafe_arena_release_snapshot();

  private:
  const ::OrderbookSnapshotUpdate& _internal_snapshot() const;
  ::OrderbookSnapshotUpdate* _internal_mutable_snapshot();

  public:
  // .OrderbookLevelUpdate incremental = 3;
  bool has_incremental() const;
  private:
  bool _internal_has_incremental() const;

  public:
  void clear_incremental() ;
  const ::OrderbookLevelUpdate& incremental() const;
  PROTOBUF_NODISCARD ::OrderbookLevelUpdate* release_incremental();
  ::OrderbookLevelUpdate* mutable_incremental();
  void set_allocated_incremental(::OrderbookLevelUpdate* value);
  void unsafe_arena_set_allocated_incremental(::OrderbookLevelUpdate* value);
  ::OrderbookLevelUpdate* unsafe_arena_release_incremental();

  private:
  const ::OrderbookLevelUpdate& _internal_incremental() const;
  ::OrderbookLevelUpdate* _internal_mutable_incremental();

  public:
  void clear_update();
  UpdateCase update_case() const;
  // @@protoc_insertion_point(class_scope:OrderbookUpdate)
 private:
  class _Internal;
  void set_has_snapshot();
  void set_has_incremental();
  inline bool has_update() const;
  inline void clear_has_update();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderbookUpdate& from_msg);
    ::int32_t instrument_id_;
    union UpdateUnion {
      constexpr UpdateUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::OrderbookSnapshotUpdate* snapshot_;
      ::OrderbookLevelUpdate* incremental_;
    } update_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_marketdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OrderbookLevel

// int32 price = 1;
inline void OrderbookLevel::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline ::int32_t OrderbookLevel::price() const {
  // @@protoc_insertion_point(field_get:OrderbookLevel.price)
  return _internal_price();
}
inline void OrderbookLevel::set_price(::int32_t value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:OrderbookLevel.price)
}
inline ::int32_t OrderbookLevel::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void OrderbookLevel::_internal_set_price(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// bool is_buy = 2;
inline void OrderbookLevel::clear_is_buy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_buy_ = false;
}
inline bool OrderbookLevel::is_buy() const {
  // @@protoc_insertion_point(field_get:OrderbookLevel.is_buy)
  return _internal_is_buy();
}
inline void OrderbookLevel::set_is_buy(bool value) {
  _internal_set_is_buy(value);
  // @@protoc_insertion_point(field_set:OrderbookLevel.is_buy)
}
inline bool OrderbookLevel::_internal_is_buy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_buy_;
}
inline void OrderbookLevel::_internal_set_is_buy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_buy_ = value;
}

// uint32 quantity = 3;
inline void OrderbookLevel::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0u;
}
inline ::uint32_t OrderbookLevel::quantity() const {
  // @@protoc_insertion_point(field_get:OrderbookLevel.quantity)
  return _internal_quantity();
}
inline void OrderbookLevel::set_quantity(::uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:OrderbookLevel.quantity)
}
inline ::uint32_t OrderbookLevel::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void OrderbookLevel::_internal_set_quantity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// OrderbookLevelUpdate

// .OrderbookLevelUpdateType update_type = 1;
inline void OrderbookLevelUpdate::clear_update_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_type_ = 0;
}
inline ::OrderbookLevelUpdateType OrderbookLevelUpdate::update_type() const {
  // @@protoc_insertion_point(field_get:OrderbookLevelUpdate.update_type)
  return _internal_update_type();
}
inline void OrderbookLevelUpdate::set_update_type(::OrderbookLevelUpdateType value) {
  _internal_set_update_type(value);
  // @@protoc_insertion_point(field_set:OrderbookLevelUpdate.update_type)
}
inline ::OrderbookLevelUpdateType OrderbookLevelUpdate::_internal_update_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::OrderbookLevelUpdateType>(_impl_.update_type_);
}
inline void OrderbookLevelUpdate::_internal_set_update_type(::OrderbookLevelUpdateType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_type_ = value;
}

// .OrderbookLevel level = 2;
inline bool OrderbookLevelUpdate::has_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.level_ != nullptr);
  return value;
}
inline void OrderbookLevelUpdate::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.level_ != nullptr) _impl_.level_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::OrderbookLevel& OrderbookLevelUpdate::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::OrderbookLevel* p = _impl_.level_;
  return p != nullptr ? *p : reinterpret_cast<const ::OrderbookLevel&>(::_OrderbookLevel_default_instance_);
}
inline const ::OrderbookLevel& OrderbookLevelUpdate::level() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OrderbookLevelUpdate.level)
  return _internal_level();
}
inline void OrderbookLevelUpdate::unsafe_arena_set_allocated_level(::OrderbookLevel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.level_);
  }
  _impl_.level_ = reinterpret_cast<::OrderbookLevel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:OrderbookLevelUpdate.level)
}
inline ::OrderbookLevel* OrderbookLevelUpdate::release_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::OrderbookLevel* released = _impl_.level_;
  _impl_.level_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::OrderbookLevel* OrderbookLevelUpdate::unsafe_arena_release_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:OrderbookLevelUpdate.level)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::OrderbookLevel* temp = _impl_.level_;
  _impl_.level_ = nullptr;
  return temp;
}
inline ::OrderbookLevel* OrderbookLevelUpdate::_internal_mutable_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.level_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::OrderbookLevel>(GetArena());
    _impl_.level_ = reinterpret_cast<::OrderbookLevel*>(p);
  }
  return _impl_.level_;
}
inline ::OrderbookLevel* OrderbookLevelUpdate::mutable_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::OrderbookLevel* _msg = _internal_mutable_level();
  // @@protoc_insertion_point(field_mutable:OrderbookLevelUpdate.level)
  return _msg;
}
inline void OrderbookLevelUpdate::set_allocated_level(::OrderbookLevel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.level_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.level_ = reinterpret_cast<::OrderbookLevel*>(value);
  // @@protoc_insertion_point(field_set_allocated:OrderbookLevelUpdate.level)
}

// -------------------------------------------------------------------

// OrderbookSnapshotUpdate

// repeated .OrderbookLevel bids = 1;
inline int OrderbookSnapshotUpdate::_internal_bids_size() const {
  return _internal_bids().size();
}
inline int OrderbookSnapshotUpdate::bids_size() const {
  return _internal_bids_size();
}
inline void OrderbookSnapshotUpdate::clear_bids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bids_.Clear();
}
inline ::OrderbookLevel* OrderbookSnapshotUpdate::mutable_bids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:OrderbookSnapshotUpdate.bids)
  return _internal_mutable_bids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* OrderbookSnapshotUpdate::mutable_bids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:OrderbookSnapshotUpdate.bids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bids();
}
inline const ::OrderbookLevel& OrderbookSnapshotUpdate::bids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OrderbookSnapshotUpdate.bids)
  return _internal_bids().Get(index);
}
inline ::OrderbookLevel* OrderbookSnapshotUpdate::add_bids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::OrderbookLevel* _add = _internal_mutable_bids()->Add();
  // @@protoc_insertion_point(field_add:OrderbookSnapshotUpdate.bids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& OrderbookSnapshotUpdate::bids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:OrderbookSnapshotUpdate.bids)
  return _internal_bids();
}
inline const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>&
OrderbookSnapshotUpdate::_internal_bids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bids_;
}
inline ::google::protobuf::RepeatedPtrField<::OrderbookLevel>*
OrderbookSnapshotUpdate::_internal_mutable_bids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bids_;
}

// repeated .OrderbookLevel asks = 2;
inline int OrderbookSnapshotUpdate::_internal_asks_size() const {
  return _internal_asks().size();
}
inline int OrderbookSnapshotUpdate::asks_size() const {
  return _internal_asks_size();
}
inline void OrderbookSnapshotUpdate::clear_asks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.asks_.Clear();
}
inline ::OrderbookLevel* OrderbookSnapshotUpdate::mutable_asks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:OrderbookSnapshotUpdate.asks)
  return _internal_mutable_asks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::OrderbookLevel>* OrderbookSnapshotUpdate::mutable_asks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:OrderbookSnapshotUpdate.asks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_asks();
}
inline const ::OrderbookLevel& OrderbookSnapshotUpdate::asks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OrderbookSnapshotUpdate.asks)
  return _internal_asks().Get(index);
}
inline ::OrderbookLevel* OrderbookSnapshotUpdate::add_asks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::OrderbookLevel* _add = _internal_mutable_asks()->Add();
  // @@protoc_insertion_point(field_add:OrderbookSnapshotUpdate.asks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>& OrderbookSnapshotUpdate::asks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:OrderbookSnapshotUpdate.asks)
  return _internal_asks();
}
inline const ::google::protobuf::RepeatedPtrField<::OrderbookLevel>&
OrderbookSnapshotUpdate::_internal_asks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.asks_;
}
inline ::google::protobuf::RepeatedPtrField<::OrderbookLevel>*
OrderbookSnapshotUpdate::_internal_mutable_asks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.asks_;
}

// -------------------------------------------------------------------

// OrderbookUpdate

// int32 instrument_id = 1;
inline void OrderbookUpdate::clear_instrument_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_ = 0;
}
inline ::int32_t OrderbookUpdate::instrument_id() const {
  // @@protoc_insertion_point(field_get:OrderbookUpdate.instrument_id)
  return _internal_instrument_id();
}
inline void OrderbookUpdate::set_instrument_id(::int32_t value) {
  _internal_set_instrument_id(value);
  // @@protoc_insertion_point(field_set:OrderbookUpdate.instrument_id)
}
inline ::int32_t OrderbookUpdate::_internal_instrument_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.instrument_id_;
}
inline void OrderbookUpdate::_internal_set_instrument_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.instrument_id_ = value;
}

// .OrderbookSnapshotUpdate snapshot = 2;
inline bool OrderbookUpdate::has_snapshot() const {
  return update_case() == kSnapshot;
}
inline bool OrderbookUpdate::_internal_has_snapshot() const {
  return update_case() == kSnapshot;
}
inline void OrderbookUpdate::set_has_snapshot() {
  _impl_._oneof_case_[0] = kSnapshot;
}
inline void OrderbookUpdate::clear_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kSnapshot) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.snapshot_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.snapshot_);
    }
    clear_has_update();
  }
}
inline ::OrderbookSnapshotUpdate* OrderbookUpdate::release_snapshot() {
  // @@protoc_insertion_point(field_release:OrderbookUpdate.snapshot)
  if (update_case() == kSnapshot) {
    clear_has_update();
    auto* temp = _impl_.update_.snapshot_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.snapshot_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::OrderbookSnapshotUpdate& OrderbookUpdate::_internal_snapshot() const {
  return update_case() == kSnapshot ? *_impl_.update_.snapshot_ : reinterpret_cast<::OrderbookSnapshotUpdate&>(::_OrderbookSnapshotUpdate_default_instance_);
}
inline const ::OrderbookSnapshotUpdate& OrderbookUpdate::snapshot() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OrderbookUpdate.snapshot)
  return _internal_snapshot();
}
inline ::OrderbookSnapshotUpdate* OrderbookUpdate::unsafe_arena_release_snapshot() {
  // @@protoc_insertion_point(field_unsafe_arena_release:OrderbookUpdate.snapshot)
  if (update_case() == kSnapshot) {
    clear_has_update();
    auto* temp = _impl_.update_.snapshot_;
    _impl_.update_.snapshot_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OrderbookUpdate::unsafe_arena_set_allocated_snapshot(::OrderbookSnapshotUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_snapshot();
    _impl_.update_.snapshot_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:OrderbookUpdate.snapshot)
}
inline ::OrderbookSnapshotUpdate* OrderbookUpdate::_internal_mutable_snapshot() {
  if (update_case() != kSnapshot) {
    clear_update();
    set_has_snapshot();
    _impl_.update_.snapshot_ =
        ::google::protobuf::Message::DefaultConstruct<::OrderbookSnapshotUpdate>(GetArena());
  }
  return _impl_.update_.snapshot_;
}
inline ::OrderbookSnapshotUpdate* OrderbookUpdate::mutable_snapshot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::OrderbookSnapshotUpdate* _msg = _internal_mutable_snapshot();
  // @@protoc_insertion_point(field_mutable:OrderbookUpdate.snapshot)
  return _msg;
}

// .OrderbookLevelUpdate incremental = 3;
inline bool OrderbookUpdate::has_incremental() const {
  return update_case() == kIncremental;
}
inline bool OrderbookUpdate::_internal_has_incremental() const {
  return update_case() == kIncremental;
}
inline void OrderbookUpdate::set_has_incremental() {
  _impl_._oneof_case_[0] = kIncremental;
}
inline void OrderbookUpdate::clear_incremental() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kIncremental) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.incremental_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.incremental_);
    }
    clear_has_update();
  }
}
inline ::OrderbookLevelUpdate* OrderbookUpdate::release_incremental() {
  // @@protoc_insertion_point(field_release:OrderbookUpdate.incremental)
  if (update_case() == kIncremental) {
    clear_has_update();
    auto* temp = _impl_.update_.incremental_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.incremental_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::OrderbookLevelUpdate& OrderbookUpdate::_internal_incremental() const {
  return update_case() == kIncremental ? *_impl_.update_.incremental_ : reinterpret_cast<::OrderbookLevelUpdate&>(::_OrderbookLevelUpdate_default_instance_);
}
inline const ::OrderbookLevelUpdate& OrderbookUpdate::incremental() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:OrderbookUpdate.incremental)
  return _internal_incremental();
}
inline ::OrderbookLevelUpdate* OrderbookUpdate::unsafe_arena_release_incremental() {
  // @@protoc_insertion_point(field_unsafe_arena_release:OrderbookUpdate.incremental)
  if (update_case() == kIncremental) {
    clear_has_update();
    auto* temp = _impl_.update_.incremental_;
    _impl_.update_.incremental_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OrderbookUpdate::unsafe_arena_set_allocated_incremental(::OrderbookLevelUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_incremental();
    _impl_.update_.incremental_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:OrderbookUpdate.incremental)
}
inline ::OrderbookLevelUpdate* OrderbookUpdate::_internal_mutable_incremental() {
  if (update_case() != kIncremental) {
    clear_update();
    set_has_incremental();
    _impl_.update_.incremental_ =
        ::google::protobuf::Message::DefaultConstruct<::OrderbookLevelUpdate>(GetArena());
  }
  return _impl_.update_.incremental_;
}
inline ::OrderbookLevelUpdate* OrderbookUpdate::mutable_incremental() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::OrderbookLevelUpdate* _msg = _internal_mutable_incremental();
  // @@protoc_insertion_point(field_mutable:OrderbookUpdate.incremental)
  return _msg;
}

inline bool OrderbookUpdate::has_update() const {
  return update_case() != UPDATE_NOT_SET;
}
inline void OrderbookUpdate::clear_has_update() {
  _impl_._oneof_case_[0] = UPDATE_NOT_SET;
}
inline OrderbookUpdate::UpdateCase OrderbookUpdate::update_case() const {
  return OrderbookUpdate::UpdateCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// InstrumentIds

// repeated int32 ids = 1;
inline int InstrumentIds::_internal_ids_size() const {
  return _internal_ids().size();
}
inline int InstrumentIds::ids_size() const {
  return _internal_ids_size();
}
inline void InstrumentIds::clear_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ids_.Clear();
}
inline ::int32_t InstrumentIds::ids(int index) const {
  // @@protoc_insertion_point(field_get:InstrumentIds.ids)
  return _internal_ids().Get(index);
}
inline void InstrumentIds::set_ids(int index, ::int32_t value) {
  _internal_mutable_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:InstrumentIds.ids)
}
inline void InstrumentIds::add_ids(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ids()->Add(value);
  // @@protoc_insertion_point(field_add:InstrumentIds.ids)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& InstrumentIds::ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:InstrumentIds.ids)
  return _internal_ids();
}
inline ::google::protobuf::RepeatedField<::int32_t>* InstrumentIds::mutable_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:InstrumentIds.ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ids();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
InstrumentIds::_internal_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ids_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* InstrumentIds::_internal_mutable_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ids_;
}

// -------------------------------------------------------------------

// Subscription

// .InstrumentIds subscribe = 1;
inline bool Subscription::has_subscribe() const {
  return action_case() == kSubscribe;
}
inline bool Subscription::_internal_has_subscribe() const {
  return action_case() == kSubscribe;
}
inline void Subscription::set_has_subscribe() {
  _impl_._oneof_case_[0] = kSubscribe;
}
inline void Subscription::clear_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (action_case() == kSubscribe) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.subscribe_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.action_.subscribe_);
    }
    clear_has_action();
  }
}
inline ::InstrumentIds* Subscription::release_subscribe() {
  // @@protoc_insertion_point(field_release:Subscription.subscribe)
  if (action_case() == kSubscribe) {
    clear_has_action();
    auto* temp = _impl_.action_.subscribe_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.subscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::InstrumentIds& Subscription::_internal_subscribe() const {
  return action_case() == kSubscribe ? *_impl_.action_.subscribe_ : reinterpret_cast<::InstrumentIds&>(::_InstrumentIds_default_instance_);
}
inline const ::InstrumentIds& Subscription::subscribe() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Subscription.subscribe)
  return _internal_subscribe();
}
inline ::InstrumentIds* Subscription::unsafe_arena_release_subscribe() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Subscription.subscribe)
  if (action_case() == kSubscribe) {
    clear_has_action();
    auto* temp = _impl_.action_.subscribe_;
    _impl_.action_.subscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Subscription::unsafe_arena_set_allocated_subscribe(::InstrumentIds* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_subscribe();
    _impl_.action_.subscribe_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Subscription.subscribe)
}
inline ::InstrumentIds* Subscription::_internal_mutable_subscribe() {
  if (action_case() != kSubscribe) {
    clear_action();
    set_has_subscribe();
    _impl_.action_.subscribe_ =
        ::google::protobuf::Message::DefaultConstruct<::InstrumentIds>(GetArena());
  }
  return _impl_.action_.subscribe_;
}
inline ::InstrumentIds* Subscription::mutable_subscribe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::InstrumentIds* _msg = _internal_mutable_subscribe();
  // @@protoc_insertion_point(field_mutable:Subscription.subscribe)
  return _msg;
}

// .InstrumentIds unsubscribe = 2;
inline bool Subscription::has_unsubscribe() const {
  return action_case() == kUnsubscribe;
}
inline bool Subscription::_internal_has_unsubscribe() const {
  return action_case() == kUnsubscribe;
}
inline void Subscription::set_has_unsubscribe() {
  _impl_._oneof_case_[0] = kUnsubscribe;
}
inline void Subscription::clear_unsubscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (action_case() == kUnsubscribe) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.unsubscribe_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.action_.unsubscribe_);
    }
    clear_has_action();
  }
}
inline ::InstrumentIds* Subscription::release_unsubscribe() {
  // @@protoc_insertion_point(field_release:Subscription.unsubscribe)
  if (action_case() == kUnsubscribe) {
    clear_has_action();
    auto* temp = _impl_.action_.unsubscribe_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.unsubscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::InstrumentIds& Subscription::_internal_unsubscribe() const {
  return action_case() == kUnsubscribe ? *_impl_.action_.unsubscribe_ : reinterpret_cast<::InstrumentIds&>(::_InstrumentIds_default_instance_);
}
inline const ::InstrumentIds& Subscription::unsubscribe() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Subscription.unsubscribe)
  return _internal_unsubscribe();
}
inline ::InstrumentIds* Subscription::unsafe_arena_release_unsubscribe() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Subscription.unsubscribe)
  if (action_case() == kUnsubscribe) {
    clear_has_action();
    auto* temp = _impl_.action_.unsubscribe_;
    _impl_.action_.unsubscribe_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Subscription::unsafe_arena_set_allocated_unsubscribe(::InstrumentIds* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_unsubscribe();
    _impl_.action_.unsubscribe_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Subscription.unsubscribe)
}
inline ::InstrumentIds* Subscription::_internal_mutable_unsubscribe() {
  if (action_case() != kUnsubscribe) {
    clear_action();
    set_has_unsubscribe();
    _impl_.action_.unsubscribe_ =
        ::google::protobuf::Message::DefaultConstruct<::InstrumentIds>(GetArena());
  }
  return _impl_.action_.unsubscribe_;
}
inline ::InstrumentIds* Subscription::mutable_unsubscribe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::InstrumentIds* _msg = _internal_mutable_unsubscribe();
  // @@protoc_insertion_point(field_mutable:Subscription.unsubscribe)
  return _msg;
}

inline bool Subscription::has_action() const {
  return action_case() != ACTION_NOT_SET;
}
inline void Subscription::clear_has_action() {
  _impl_._oneof_case_[0] = ACTION_NOT_SET;
}
inline Subscription::ActionCase Subscription::action_case() const {
  return Subscription::ActionCase(_impl_._oneof_case_[0]);
}
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::OrderbookLevelUpdateType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::OrderbookLevelUpdateType>() {
  return ::OrderbookLevelUpdateType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // marketdata_2eproto_2epb_2eh
